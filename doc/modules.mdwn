# Modules

Almost all of the front end's functionality is contained in small,
separate modules that reside in the directory tree beneath
`plinth/modules`.  Some are installed by default, some are
required for operation, and some are entirely optional.

## Installing and Loading Modules

Eventually, the goal is for module to be separate Debian package so
installation is as simple as `aptitude install freedombox-foo`.  As an
intermediate step, we'll start scripting module installation.  But
until then, we can install them manually.

A module can be represented inside of Plinth via a django app.
To enable a module, put a file containing its python path into
`data/etc/plinth/modules-enabled/`.  Django is configured to use all
modules of the `modules-enabled` folder as apps.  With the python path
you can also include modules/apps outside of plinth.

TODO: automatically prune dead links to clear out old module installs.
This is something the install scripts should do.

## Coding Practices for Modules

All the
[coding practices for hacking on the front end](#hacking_code_practices)
also apply to modules.  In addition, I try to stick to the other
practices listed in this section.

* Every module should `from gettext import gettext as _` and wrap
displayed strings with _().
