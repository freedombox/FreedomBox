#!/usr/bin/python3
# -*- mode: python -*-
#
# This file is part of Plinth.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

"""
Configuration helper for Transmission daemon.
"""

import argparse
import json
import sys

from plinth import action_utils


SERVICE_CONFIG = '/etc/default/transmission-daemon'
TRANSMISSION_CONFIG = '/etc/transmission-daemon/settings.json'


def parse_arguments():
    """Return parsed command line arguments as dictionary."""
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest='subcommand', help='Sub command')

    subparsers.add_parser('enable', help='Enable Transmission service')
    subparsers.add_parser('disable', help='Disable Transmission service')
    subparsers.add_parser(
        'get-configuration', help='Return the current configuration')
    subparsers.add_parser(
        'merge-configuration',
        help='Merge JSON configuration from stdin with existing')

    return parser.parse_args()


def subcommand_enable(_):
    """Start Transmission service."""
    action_utils.service_enable('transmission-daemon')
    action_utils.webserver_enable('transmission-plinth')


def subcommand_disable(_):
    """Stop Transmission service."""
    action_utils.webserver_disable('transmission-plinth')
    action_utils.service_disable('transmission-daemon')


def subcommand_get_configuration(_):
    """Return the current configuration in JSON format."""
    configuration = open(TRANSMISSION_CONFIG, 'r').read()
    print(configuration)


def subcommand_merge_configuration(arguments):
    """Merge given JSON configuration with existing configuration."""
    configuration = sys.stdin.read()
    configuration = json.loads(configuration)

    current_configuration = open(TRANSMISSION_CONFIG, 'r').read()
    current_configuration = json.loads(current_configuration)

    new_configuration = current_configuration
    new_configuration.update(configuration)
    new_configuration = json.dumps(new_configuration, indent=4, sort_keys=True)

    open(TRANSMISSION_CONFIG, 'w').write(new_configuration)
    action_utils.service_reload('transmission-daemon')


def main():
    """Parse arguments and perform all duties."""
    arguments = parse_arguments()

    subcommand = arguments.subcommand.replace('-', '_')
    subcommand_method = globals()['subcommand_' + subcommand]
    subcommand_method(arguments)


if __name__ == '__main__':
    main()
